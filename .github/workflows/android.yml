name: Build Signed APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 允许上传 Release 资源

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 设置 Java 环境
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # 使用 Eclipse Temurin 发行版
          java-version: '11'

      # 3. 构建 Release APK (使用 Gradle 包装器)
      - name: Build Release APK
        run: ./gradlew assembleRelease

      # 4. 为 APK 签名
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release # 指向 APK 目录
          signingKeyBase64: ${{ secrets.KEYSTORE }} # Base64 编码的签名密钥
          alias: ${{ secrets.KEY_ALIAS }} # 密钥别名
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }} # 密钥库密码
          keyPassword: ${{ secrets.KEY_PASSWORD }} # 密钥密码

      # 5. (可选) 重命名已签名的 APK
      - name: Rename Signed APK
        run: mv "${{ steps.sign_app.outputs.signedReleaseFile }}" "FastFill_Signed_${{ github.ref_name }}.apk"

      # 6. 创建 GitHub Release 并上传 APK
      - name: Upload APK to Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.apk" # 上传所有 .apk 文件
          token: ${{ github.token }}
          generateReleaseNotes: true # 自动生成 Release 说明